This project demonstrates the foundational use of Python variables to support cybersecurity-related scenarios. Variables are utilized to store and manipulate critical login information, including device IDs, usernames, and login attempts, to ensure secure access to systems.

Objectives
Understand how to assign values to variables and interpret their data types.
Manage lists of approved usernames.
Implement Boolean logic to evaluate login attempts against defined thresholds.
Key Features
Device Identification:

Created a variable device_id to represent a unique device identifier.
Verified the data type using Python's type() function.
Approved Username Management:

Stored a list of usernames with access privileges in a variable username_list.
Updated the list to include additional authorized users.
Login Control:

Assigned the maximum allowed login attempts (max_logins) and current attempts (login_attempts).
Used Boolean logic to evaluate whether the number of attempts remains within acceptable limits.
Boolean Representation:

Explored Boolean values through the login_status variable, indicating login success or failure.
Example Code Snippets
Assigning and verifying the device ID:
python
Copy
Edit
device_id = "72e08x0"
print(type(device_id))  # Outputs: <class 'str'>
Managing the list of approved users:
python
Copy
Edit
username_list = ["madebowa", "jnguyen", "tbecker", "nhersh", "redwards"]
username_list.append("lpope")
print(username_list)
Verifying login attempts:
python
Copy
Edit
max_logins = 3
login_attempts = 2
print(login_attempts <= max_logins)  # Outputs: True
Summary of Findings
This activity highlighted the versatility of Python in managing data types and applying logical operations to enhance system security. Key takeaways include:

Efficient storage and handling of data using lists and variables.
Boolean logic plays a crucial role in decision-making processes.
Dynamic updates to variables enable scalability and flexibility.
Future Applications
The skills demonstrated in this project lay the groundwork for:

Automating security audits.
Implementing access control systems.
Enhancing cybersecurity protocols through logical validation processes.
